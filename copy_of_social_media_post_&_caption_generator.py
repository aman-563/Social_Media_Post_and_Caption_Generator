# -*- coding: utf-8 -*-
"""Copy_of_Social_Media_Post_&_Caption_Generator.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1sC7iO95KmeR7d1IuDhmDyxH1ERLkI_6Z
"""

!pip install transformers gradio

"""transformers: Installs Hugging Face's library for using pre-trained models (e.g., BERT, GPT).

gradio: Installs the Gradio library to build web-based UIs for ML models.
"""

import gradio as gr
from transformers import pipeline
import random

"""1. import gradio as gr

Imports the Gradio library for creating simple web interfaces for machine learning models.

2. from transformers import pipeline

Imports Hugging Face’s pipeline, a high-level API for tasks like text classification, translation, summarization, etc.

3. import random

Imports Python's built-in random module (likely to randomly select inputs or examples in your app).


"""

caption_generator = pipeline("text-generation", model="gpt2")

"""1. Loads the GPT-2 model and tokenizer.

2. Sets up a pipeline that can generate text (e.g., captions, story continuations, etc.).
"""

emoji_dict={
    "positive": ["😊","🌟","🔥","💪","🚀","✨","😍","😛","😁"],
    "negative":["😢","😞","💔","😠","😓","👳‍♀️"],
    "neutral":["🙂","😐","🧐","🤔","😶"]
}


sentiment_pipeline=pipeline("sentiment-analysis")


def get_emojis(text):
  label=sentiment_pipeline(text)[0]['label'].lower()
  return''.join(random.sample(emoji_dict.get(label,["😐"]),3))

"""1. Uses a sentiment analysis pipeline (e.g., based on distilbert-base-uncased-finetuned-sst-2-english).

2. Maps the predicted sentiment label to a set of emojis from a dictionary.

3. Randomly picks 3 emojis from the corresponding sentiment and returns them as a string.
"""

def get_hashtags(prompt, platform):
  words=prompt.lower().split()
  tags=["#" + word.replace(" ","")for word in words if len(word)>3]


  platform_tags={
      "Instagram":["#instadaily","#igers","#pipcoftheday"],
      "LinkedIn":["#career","#leadership","#networking"],
      "Twitter":["#tweet","#trending","#news"]
  }
  return" ".join(tags[:5]+ random.sample(platform_tags[platform],2))

"""🔸 1. Input:
    * prompt: A sentence or phrase written by the user (e.g., "Traveling to the mountains with friends").

    * platform: A social media platform (e.g., "Instagram", "LinkedIn", or "Twitter").

🔸 2. Convert Prompt to Hashtags:
    * The prompt is split into words, all converted to lowercase.

    * It creates hashtags for words longer than 3 letters.

     Example:
            Input: "Exploring the hills with friends"
            Output: ['#exploring', '#hills', '#with', '#friends']

🔸 3. Select Platform-Specific Hashtags:
    * A predefined dictionary platform_tags maps platforms to popular   tags.

    * Randomly selects 2 tags from the list based on the platform you specify.

🔸 4. Combine General + Platform-Specific Hashtags:
    * Takes up to the first 5 general tags from the user input.

    * Adds 2 random platform-specific tags.

    * Returns a string with all hashtags separated by spaces.
"""

def generate_post(prompt, platform):
  #Generate caption
  caption = caption_generator(prompt, max_length=50, num_return_sequences=1)[0]['generated_text']


  #Generate emojis
  emojis=get_emojis(caption)


  #Generate hashtags
  hashtags = get_hashtags(prompt, platform)


  return caption.strip(), emojis, hashtags

"""Caption
→ Generated using an AI text model (e.g., GPT-2) based on the user's prompt.

Emojis
→ Generated based on the sentiment of the caption (positive, negative, or neutral).

Hashtags
→ Created from the prompt + 2 random platform-specific tags.
"""

interface = gr.Interface(
    fn=generate_post,
    inputs=[
         gr.Textbox(label="Enter keyword or theme"),
        gr.Radio(["Instagram", "LinkedIn", "Twitter"],label="Choose Platform")
        ],
    outputs=[
        gr.Textbox(label="Generated Caption"),
        gr.Textbox(label="Emojis"),
        gr.Textbox(label="Hashtags")
    ],
    title="Social Media Post & Caption Generator",
    description="Generate catchy captions, relevent hashtags, and emojis based on your theme!"
    )



interface.launch()

"""# New section"""